[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "district-offices"
version = "0.1.0"
description = "Extract district office information from congressional representatives' websites"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
dependencies = [
    "beautifulsoup4>=4.9.0",
    "requests>=2.25.0",
    "psycopg2-binary>=2.9.0",
    "litellm>=1.0.0",
    "playwright>=1.40.0",
    "tqdm>=4.60.0",
    "asyncpg>=0.29.0",
    "aiohttp>=3.9.0",
    "aiofiles>=23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
district-offices = "cli.async_scrape:run"
district-offices-scrape = "cli.scrape:main"
district-offices-validate = "district_offices.validation.runner:main"
district-offices-find-contacts = "district_offices.processing.contact_finder:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["district_offices"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]